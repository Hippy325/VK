name: iOS CI with Tuist

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: macos-14

    steps:
      # --- 1. Клонирование репозитория ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- 2. Выбор версии Xcode ---
      - name: Select Xcode 16.1
        run: sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer

      - name: Verify Xcode version
        run: xcodebuild -version

      # --- 3. Установка Tuist через официальный скрипт ---
      - name: Install Tuist
        run: curl -Ls https://install.tuist.io | bash

      # --- 4. Очистка старых артефактов (опционально) ---
      - name: Clean old Tuist artifacts
        run: |
          rm -rf VK.xcworkspace VK.xcodeproj DerivedData .tuist-cache

      # --- 5. Генерация проекта через Tuist ---
      - name: Generate project with Tuist
        run: tuist generate

      # --- 6. Сборка проекта ---
      - name: Build
        run: |
          xcodebuild clean build \
            -workspace VK.xcworkspace \
            -scheme VK \
            -sdk iphoneos \
            -configuration Debug \
            -derivedDataPath DerivedData \
            CODE_SIGNING_ALLOWED=NO

      # --- 7. (опционально) Запуск тестов ---
      # - name: Run tests
      #   run: |
      #     xcodebuild test \
      #       -workspace VK.xcworkspace \
      #       -scheme VK \
      #       -sdk iphonesimulator \
      #       -destination 'platform=iOS Simulator,name=iPhone 15,OS=18.1' \
      #       -configuration Debug \
      #       -derivedDataPath DerivedData \
      #       CODE_SIGNING_ALLOWED=NO
